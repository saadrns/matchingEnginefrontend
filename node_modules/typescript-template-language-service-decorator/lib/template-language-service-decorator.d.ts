import * as ts from 'typescript/lib/tsserverlibrary';
import Logger from './logger';
import TemplateStringLanguageService from './template-language-service';
import TemplateSourceHelper from './template-source-helper';
export default class TemplateLanguageServiceProxy {
    private readonly sourceHelper;
    private readonly templateStringService;
    private readonly logger;
    private _wrappers;
    constructor(sourceHelper: TemplateSourceHelper, templateStringService: TemplateStringLanguageService, logger: Logger);
    decorate(languageService: ts.LanguageService): any;
    private tryAdaptGetSyntaxDiagnostics();
    private tryAdaptGetSemanticDiagnostics();
    private tryAdaptGetQuickInfoAtPosition();
    private tryAdaptGetCompletionsAtPosition();
    private tryAdaptGetFormattingEditsForRange();
    private wrap<K>(name, wrapper);
    private adapterDiagnosticsCall(delegate, implementation, fileName);
    private translateTextChange(context, textChangeInTemplate);
}
